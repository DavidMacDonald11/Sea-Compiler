funDeclaration ::= [visKeyword] [funModifier] "fun" IDENTIFIER "(" [parameters] ")" [funReturn]
    funReturn ::= "->" type

funModifier ::= "entry" | "egress"

parameters ::= parameterList
             | parameterList "," defualtParameterList
             | defaultParameterList

defaultParameterList ::= defaultParameter | (defaultParameter "," defualtParameterList)
defaultParameter ::= parameter "=" expression
parameterList ::= parameter | (parameter "," parameterList)
parameter ::= ["invar" | "var"] ["&"] IDENTIFIER ":" type


varDeclaration ::= [visKeyword] [storageKeyword] varKeyword varDeclarator
varDeclarator ::= IDENTIFIER [":" type] "=" expression
                | IDENTIFIER ":" type ["=" expression]

varKeyword ::= "val" | "invar" | "var"
storageKeyword ::= "static"
visKeyword ::= "public" | "private"

type ::= ["#"] typeName ["?"]

typeName ::= typeKeyword | IDENTIFIER | fileIdentifier | arrayType
arrayType ::= "Array" "<" typeName ["," expression] ">"

typeKeyword ::= "Bool" | "Byte" | "Char"
              | "Int16" | "Int" | "Int32" | "Int64"
              | "Nat16" | "Nat" | "Nat32" | "Nat64"
              | "Real32" | "Real" | "Real64"
              | "Imag32" | "Imag" | "Imag64"
              | "Cplex32" | "Cplex" | "Cplex64"
