expression ::= nullCoalescingExpression

nullCoalescingExpression ::= conditionalExpression ["?:" nullCoalescingExpression]
conditionalExpression ::= logicalOrExpression ["if" expression "else" conditionalExpression]

logicalOrExpression ::= logicalXorExpression ["or" logicalOrExpression]
logicalXorExpression ::= logicalAndExpression ["xor" logicalXorExpression]
logicalAndExpression ::= logicalNotExpression ["and" logicalAndExpression]
logicalNotExpression ::= comparativeExpression | ("not" logicalNotExpression)

comparativeExpression ::= castExpression [comparisonOperator comparativeExpression]
    comparisonOperator ::= "<" | ">" | "<=" | ">=" | "==" | "!="

castExpression ::= bitwiseOrExpression | (castExpression "as" type)

bitwiseOrExpression ::= bitwiseXorExpression ["|" bitwiseOrExpression]
bitwiseXorExpression ::= bitwiseAndExpression ["$" bitwiseXorExpression]
bitwiseAndExpression ::= shiftExpression ["&" bitwiseAndExpression]
shiftExpression ::= additiveExpression [("<<" | ">>") shiftExpression]

additiveExpression ::= multiplicativeExpression [("+" | "-") additiveExpression]
multiplicativeExpression ::= unaryExpression [("*" | "/" | "%" | "mod") multiplicativeExpression]

unaryExpression ::= postfixExpression | (unaryOperator unaryExpression)
    unaryOperator ::= "+" | "-" | "!" | "&" | "$"

postfixExpression ::= postfixExpression ["!!"]
                    | postfixExpression ["." IDENTIFIER]
                    | postfixExpression ["?." IDENTIFIER]
                    | postfixExpression ["[" expression "]"] 
                    | primaryExpression

primaryExpression ::= NUMBER
                    | CHARACTER
                    | STRING
                    | IDENTIFIER
                    | fileIdentifier
                    | primaryKeyword
                    | "(" expression ")"
    fileIdentifier ::= IDENTIFIER "::" IDENTIFIER
    primaryKeyword ::= "true" | "false" | "null"
