:: Generated by Bing Chat based on sea.bash

@echo off
set path="%~dp0"
set main="%path%\app\build\distributions\app\bin\app"

:version
    echo Sea 0.0.0
    goto:eof

:update
    echo Not Implemented
    goto:eof

:printu
    echo   %-20s %1
    echo \t%-52s %2
    goto:eof

:usage
    echo Usage: sea [OPTIONS]... [DIR|FILE]...
    echo Compiles Sea code in FILEs or in DIRs and subdirs.
    echo.
    echo OPTIONS:
    call :printu "-d, --debug" "writes compiler debug information to a file."
    call :printu "-h, --help" "prints the sea command's usage information."
    call :printu "-u, --update" "uses git to update Sea to the latest version."
    call :printu "--version" "prints the sea command's version information."
    echo.
    call :printu "-o, --out=OUT" "specifies the output directory to compile to;"
    call :printu "" "all files will be written into OUT, which is"
    call :printu "" "the current directory by default; The directory"
    call :printu "" "will be created if it does not exist."
    goto:eof

set options="-"
set out_dir="."
set files=()

:add
    set options="%options%%1"
    goto:eof

:get_arg_return

:get_arg
    if "%OPTARG%" == "*=*"
        set get_arg_return="%OPTARG#*=%"
        goto:eof
    fi

    echo Must supply an argument to %1.
    exit /b 1

:get_single_arg
    call :get_arg "%1"

    set char="%get_arg_return:~0,1%"

    if "%2" == "" || "%2" == *"%char%"*
        set get_arg_return="%char%"
        goto:eof
    fi

    echo Argument must be one of '%2'.
    exit /b 3


for %%a in (%*) do (
    if "%%a" == "-h" (
        call :usage
        exit /b 0
    ) else if "%%a" == "-d" (
        call :add "d"
    ) else if "%%a" == "-u" (
        call :update
        exit /b %errorlevel%
    ) else if "%%a" == "--version" (
        call :version
        exit /b 0
    ) else if "%%a" == "-o" (
        call :get_arg "--out"
        set out_dir="%get_arg_return%"
    ) else (
        echo Invalid options: --%%a.
        exit /b 2
    )
)

for %%a in (%*) do (
    if "%%a" == "-" (
        continue
    )

    if not exist "%%a" (
        echo '%%a' is not an existing file or directory.
        exit /b 4
    )

    for /r "%%a" %%f in (*.sea) do (
        set files=%files% %%f
    )
)

if "%files%" == "" (
    echo Requires input files or directories to compile.
    exit /b 6
)

set files=%files: =%
for /f "delims=" %%f in ('echo %files%') do set files=%%f

if not exist "%out_dir%" mkdir "%out_dir%"
cd "%out_dir%"
set out_dir="%cd%"
cd "%~dp0"

echo.

if not "%main%" "%options%" "%out_dir%" %files% (
    exit /b %errorlevel%
)

exit /b 0
